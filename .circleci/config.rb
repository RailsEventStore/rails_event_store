require "yaml"

GEMS = %w[
  aggregate_root
]

Docker =
  Struct.new(:image, :environment, :command) do
    def to_h
      super.select { |_, value| value }.transform_keys(&:to_s)
    end
  end

def Ruby(version, environment=nil)
  Docker.new(
    "railseventstore/ruby:#{version}",
    environment,
    nil
  )
end

def Images(images)
  { "docker" => images.map(&:to_h) }
end

def Config(jobs, workflows)
  {
    "version" => "2.1",
    "jobs" => jobs,
    "workflows" => { "version" => "2" }.merge(workflows)
  }
end

def Run(command)
  { "run" => command }
end

def NamedRun(name, command)
  { "run" => { "name" => name, "command" => command } }
end

def Workflow(name, jobs)
  { name => { "jobs" => jobs } }
end

def Requires(dependencies)
  dependencies.flat_map do |dependent, required|
    [required, { dependent => { "requires" => Array(required) } }]
  end
end

def Job(name, docker, steps)
  { name => docker.merge("steps" => steps) }
end

def GemJob(task, docker, gem_name, name)
  Job(name, docker, ["checkout", Run("make -C #{gem_name} install #{task}")])
end

def JobName(task, ruby_version)
  normalize = ->(name) { name.gsub("-", "_").gsub(".", "_") }
  ->(gem_name) do
    [
      task,
      gem_name,
      ruby_version
    ].map(&normalize).join("_")
  end
end

def Test(name, *images)
  ->(gem_name) do
    GemJob(
      "test",
      Images(images),
      gem_name,
      JobName("test", name)[gem_name]
    )
  end
end

def Mutate(name, ruby)
  ->(gem_name) do
    GemJob(
      "mutate",
      Images([Ruby(ruby, "MUTANT_JOBS" => 4)]),
      gem_name,
      JobName("mutate", name)[gem_name]
    )
  end
end

def Merge(array, transform = ->(item) { item })
  array.reduce({}) { |memo, item| memo.merge(transform.(item)) }
end

check_config =
  Job(
    "check_config",
    Images([Ruby("2.7")]),
    [
      "checkout",
      NamedRun(
        "Verify .circleci/config.yml is generated from .circleci/config.rb",
        %Q[WAS="$(md5sum .circleci/config.yml)" && ruby .circleci/config.rb && test "$WAS" == "$(md5sum .circleci/config.yml)"]
      )
    ]
  )
mutations_2_6 =
  Merge(
    GEMS,
    Mutate("ruby_2_6", "2.6")
  )
mutations_2_7 =
  Merge(
    GEMS,
    Mutate("ruby_2_7", "2.7")
  )
jobs =
  [
    check_config,
    mutations_2_7,
    mutations_2_6,
  ]
workflows          =
  [
    Workflow(
      "Check configuration",
      %w[check_config]
    ),
    Workflow(
      "Ruby 2.7",
      GEMS.map(&JobName("mutate", "ruby_2_7"))
    ),
    Workflow(
      "Ruby 2.6",
      GEMS.map(&JobName("mutate", "ruby_2_6"))
    ),
  ]
config =
  Config(
    Merge(jobs),
    Merge(workflows)
  )

File.open(".circleci/config.yml", "w") do |f|
  f << <<~EOS << YAML.dump(config).gsub("---", "")
    # This file is generated by .circleci/config.rb, do not edit it manually!
    # Edit .circleci/config.rb and run ruby .circleci/config.rb
  EOS
end
