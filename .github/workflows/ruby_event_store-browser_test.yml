name: ruby_event_store-browser_test
on:
  workflow_dispatch:
  repository_dispatch:
    types:
    - script
  push:
    paths:
    - aggregate_root/**
    - rails_event_store/**
    - ruby_event_store/**
    - ruby_event_store-active_record/**
    - ruby_event_store-browser/**
    - ruby_event_store-rspec/**
    - ".github/workflows/ruby_event_store-browser_test.yml"
    - support/**
    - "!support/bundler/**"
    - "!support/ci/**"
  pull_request:
    types:
    - opened
    - reopened
    paths:
    - aggregate_root/**
    - rails_event_store/**
    - ruby_event_store/**
    - ruby_event_store-active_record/**
    - ruby_event_store-browser/**
    - ruby_event_store-rspec/**
    - ".github/workflows/ruby_event_store-browser_test.yml"
    - support/**
    - "!support/bundler/**"
    - "!support/ci/**"
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      WORKING_DIRECTORY: ruby_event_store-browser
      RUBY_VERSION: "${{ matrix.ruby_version }}"
      BUNDLE_GEMFILE: "${{ matrix.bundle_gemfile }}"
    strategy:
      fail-fast: false
      matrix:
        include:
        - ruby_version: ruby-3.4
          bundle_gemfile: Gemfile
        - ruby_version: ruby-3.3
          bundle_gemfile: Gemfile
        - ruby_version: ruby-3.2
          bundle_gemfile: Gemfile
        - ruby_version: ruby-3.1
          bundle_gemfile: Gemfile
        - ruby_version: ruby-3.4
          bundle_gemfile: Gemfile.rack_2_0
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - run: test -e ${{ env.BUNDLE_GEMFILE }}.lock
      working-directory: "${{ env.WORKING_DIRECTORY }}"
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ env.RUBY_VERSION }}"
        bundler-cache: true
        working-directory: "${{ env.WORKING_DIRECTORY }}"
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: "${{ env.WORKING_DIRECTORY }}/elm/package-lock.json"
    - uses: actions/cache@v4
      with:
        path: "~/.elm"
        key: elm-${{ hashFiles(format('{0}/elm/elm.json', env.WORKING_DIRECTORY)) }}
    - run: make install-npm test
      working-directory: "${{ env.WORKING_DIRECTORY }}"
      env:
        RUBYOPT: "--enable-frozen-string-literal"