[
  {
    "url": "https://blog.arkency.com/audit-log-with-event-sourcing/",
    "title": "Audit log with event sourcing"
  },
  {
    "url": "https://blog.arkency.com/how-to-build-a-read-model-with-rails-event-store-projection/",
    "title": "How to build a read model with Rails Event Store Projection"
  },
  {
    "url": "https://blog.arkency.com/how-to-balance-the-public-apis-of-open-source-library-practical-examples-from-railseventstore/",
    "title": "How to balance the public APIs of an open-source library — practical examples from RailsEventStore"
  },
  {
    "url": "https://blog.arkency.com/order-code-review/",
    "title": "Code review of an Order object implemented as a state machine"
  },
  {
    "url": "https://blog.arkency.com/the-goodies-in-rails-event-store-2-dot-x/",
    "title": "The Goodies in Rails Event Store 2.x"
  },
  {
    "url": "https://blog.arkency.com/4-strategies-when-you-need-to-change-a-published-event/",
    "title": "4 strategies when you need to change a published event"
  },
  {
    "url": "https://blog.arkency.com/low-boilerplate-process-manager/",
    "title": "Low-boilerplate process manager"
  },
  {
    "url": "https://medium.com/yellowme/event-sourcing-explained-with-real-code-5d621859bf51",
    "title": "Event Sourcing explained with real code"
  },
  {
    "url": "https://blog.arkency.com/rails-multiple-databases-support-in-rails-event-store/",
    "title": "Rails multiple databases support in Rails Event Store"
  },
  {
    "url": "https://blog.arkency.com/avoid-coupling-between-bounded-contexts-using-weak-schema/",
    "title": "Avoid coupling between Bounded Contexts using Weak Schema"
  },
  {
    "url": "https://blog.arkency.com/update-rails-event-store-to-v1-dot-0-0-walkthrough/",
    "title": "Update Rails Event Store to v1.0.0 - walkthrough"
  },
  {
    "url": "https://dev.to/isalevine/building-an-event-sourcing-system-in-rails-part-1-what-is-event-sourcing-46db",
    "title": "Building an Event Sourcing System in Rails, Part 1: What is Event Sourcing?"
  },
  {
    "url": "https://blog.arkency.com/rails-event-store-1-dot-0-the-past-present-and-future/",
    "title": "Rails Event Store 1.0 — The Past, Present and Future"
  },
  {
    "url": "https://blog.arkency.com/rename-stream-in-rails-event-store-with-zero-downtime/",
    "title": "Rename stream in Rails Event Store with zero downtime"
  },
  {
    "url": "https://blog.arkency.com/managing-rails-event-store-subscriptions-how-to/",
    "title": "Managing Rails Event Store Subscriptions — How To"
  },
  {
    "url": "https://blog.arkency.com/catchup-subscriptions-with-rails-event-store/",
    "title": "Catchup subscriptions with Rails Event Store"
  },
  {
    "url": "https://blog.arkency.com/ultimate-guide-to-3rd-party-calls-from-your-aggregate/",
    "title": "Ultimate guide to 3rd party calls from your Aggregate"
  },
  {
    "url": "https://blog.arkency.com/legacy-rails-ddd-migration-strategy-from-read-models-through-events-to-aggregates/",
    "title": "Legacy Rails DDD Migration strategy — from read models, through events to aggregates"
  },
  {
    "url": "https://blog.arkency.com/how-to-migrate-large-database-tables-without-a-headache/",
    "title": "How to migrate large database tables without a headache"
  },
  {
    "url": "https://blog.arkency.com/unexpected-benefits-of-storing-commands/",
    "title": "Unexpected benefits of storing commands"
  },
  {
    "url": "https://assist-software.net/blog/introduction-event-sourcing-ruby-rails",
    "title": "Introduction to event sourcing in Ruby on Rails"
  },
  {
    "url": "https://blog.arkency.com/using-streams-to-build-read-models/",
    "title": "Using streams to build read models"
  },
  {
    "url": "https://blog.arkency.com/optimizing-test-suites-when-using-rails-event-store/",
    "title": "Optimizing test suites when using Rails Event Store"
  },
  {
    "url": "https://blog.arkency.com/read-model-patterns-in-case-of-lack-of-order-guarantee/",
    "title": "Patterns for asynchronous read models in infrastructure without order guarantee"
  },
  {
    "url": "https://blog.arkency.com/modeling-passing-time-with-events/",
    "title": "Modeling passing time with events"
  },
  {
    "url": "https://blog.arkency.com/what-ive-learnt-at-rescon/",
    "title": "What I've learnt at RESCON"
  },
  {
    "url": "https://kickstarter.engineering/event-sourcing-made-simple-4a2625113224",
    "title": "Event Sourcing made Simple"
  },
  {
    "url": "https://medium.com/briisk/what-i-learned-from-using-event-driven-architecture-and-ddd-ab154eeba489",
    "title": "What I learned from using Event Driven Architecture and DDD"
  },
  {
    "url": "https://epublications.vu.lt/object/elaba:23166769/23166769.pdf",
    "title": "Reaktyvus programavimas įvykių kaupimo sistemose"
  },
  {
    "url": "https://blog.arkency.com/correlation-id-and-causation-id-in-evented-systems/",
    "title": "Correlation id and causation id in evented systems"
  },
  {
    "url": "https://blog.arkency.com/rewriting-deprecated-apis-with-parser-gem/",
    "title": "Rewriting deprecated APIs with parser gem"
  },
  {
    "url": "https://blog.arkency.com/ruby-event-store-use-without-rails/",
    "title": "Ruby Event Store - use without Rails"
  },
  {
    "url": "https://blog.arkency.com/rails-event-store-better-apis-coming/",
    "title": "Rails Event Store - better APIs coming"
  },
  {
    "url": "https://blog.arkency.com/process-managers-revisited/",
    "title": "Process Managers revisited"
  },
  {
    "url": "https://blog.arkency.com/2017/06/dogfooding-process-manager/",
    "title": "Dogfooding Process Manager"
  },
  {
    "url": "https://blog.arkency.com/how-to-get-audit-log-with-railseventstore/",
    "title": "How to get an audit log with RailsEventStore today"
  },
  {
    "url": "http://andrzejsliwa.com/thoughs-after-rails-domain-driven-desgin-workshop.html",
    "title": "Thoughts after Rails + Domain Driven Design workshop"
  },
  {
    "url": "https://blog.arkency.com/one-simple-trick-to-make-event-sourcing-click/",
    "title": "One simple trick to make Event Sourcing click"
  },
  {
    "url": "https://blog.arkency.com/composable-rspec-matchers/",
    "title": "Composable RSpec matchers"
  },
  {
    "url": "https://blog.arkency.com/how-to-setup-development-work-with-railseventstore-and-mutant/",
    "title": "How to setup development work with RailsEventStore and mutant"
  },
  {
    "url": "https://blog.arkency.com/why-we-follow-rails-repo-structure-in-rails-event-store/",
    "title": "Why we follow the Rails repo structure in Rails Event Store"
  },
  {
    "url": "https://blog.arkency.com/2016-12-30-event-sourced-domain-objects-in-less-than-150-loc",
    "title": "Event sourced domain objects in less than 150 LOC"
  },
  {
    "url": "https://blog.arkency.com/2016-07-10-domain-events-schema-definitions",
    "title": "Domain Events Schema Definitions"
  },
  {
    "url": "https://blog.arkency.com/2016-05-09-the-anatomy-of-domain-event",
    "title": "The anatomy of Domain Event"
  },
  {
    "url": "https://blog.arkency.com/2016-01-26-one-event-to-rule-them-all",
    "title": "One event to rule them all"
  },
  {
    "url": "http://fhwang.net/g/Event-Sourcing-Libraries-in-Ruby-A-Guide",
    "title": "Event Sourcing Libraries in Ruby: A Guide"
  },
  {
    "url": "https://blog.arkency.com/2015-09-22-testing-event-sourced-application-the-read-side",
    "title": "Testing Event Sourced application - the read side"
  },
  {
    "url": "https://blog.arkency.com/2015-07-07-testing-event-sourced-application",
    "title": "Testing an Event Sourced application"
  },
  {
    "url": "https://blog.arkency.com/2015-06-12-subscribing-for-events-in-rails-event-store",
    "title": "Subscribing for events in rails_event_store"
  },
  {
    "url": "https://blog.arkency.com/2015-05-15-using-domain-events-as-success-slash-failure-messages/",
    "title": "Using domain events as success/failure messages"
  },
  {
    "url": "https://blog.arkency.com/2015-05-14-introducing-read-models-in-your-legacy-application",
    "title": "Introducing Read Models in your legacy application"
  },
  {
    "url": "https://blog.arkency.com/2015-05-05-building-an-event-sourced-application-using-rails-event-store",
    "title": "Building an Event Sourced application using rails_event_store"
  },
  {
    "url": "https://blog.arkency.com/2015/03/why-use-event-sourcing/",
    "title": "Why use Event Sourcing"
  },
  {
    "url": "https://blog.arkency.com/2015/04/the-event-store-for-rails-developers/",
    "title": "The Event Store for Rails developers"
  },
  {
    "url": "https://blog.arkency.com/2015/03/fast-introduction-to-event-sourcing-for-ruby-programmers/",
    "title": "Fast introduction to Event Sourcing for Ruby programmers"
  },
  {
    "url": "https://blog.arkency.com/2015/04/why-i-want-to-introduce-mutation-testing-to-the-rails-event-store-gem/",
    "title": "Why I want to introduce mutation testing to the rails_event_store gem"
  },
  {
    "url": "https://www.monterail.com/blog/introduction-to-rails-event-store",
    "title": "Introduction to Rails Event Store"
  }
]
